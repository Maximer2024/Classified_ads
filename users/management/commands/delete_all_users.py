from django.core.management.base import BaseCommand
from users.models import CustomUser
import logging

logger = logging.getLogger(__name__)

class Command(BaseCommand):
    help = "–£–¥–∞–ª—è–µ—Ç –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫—Ä–æ–º–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"

    def handle(self, *args, **kwargs):
        users_to_delete = CustomUser.objects.exclude(is_superuser=True)

        if not users_to_delete.exists():
            self.stdout.write(self.style.WARNING("‚ö† –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è"))
            return

        deleted_users_info = list(users_to_delete.values_list("id", "email"))

        deleted_count, _ = users_to_delete.delete()

        logger.info(f"üóë –£–¥–∞–ª–µ–Ω–æ {deleted_count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∫—Ä–æ–º–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)")
        self.stdout.write(self.style.SUCCESS(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ {deleted_count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"))

        for user_id, email in deleted_users_info:
            self.stdout.write(self.style.NOTICE(f"–£–¥–∞–ª—ë–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ID={user_id}, Email={email}"))
